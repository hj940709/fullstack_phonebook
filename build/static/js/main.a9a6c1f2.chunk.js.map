{"version":3,"sources":["person_service.js","person.js","person_form.js","filter.js","notifiaction.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","delete","put","Person","props","person","name","number","onClick","updateState","afterRemove","setMessage","setIsError","window","confirm","PersonService","setTimeout","catch","error","Persons","persons","map","key","setPersons","filter","x","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","console","log","filtered","length","concat","value","onChange","target","type","Filter","setFilter","Notification","message","className","App","isError","useEffect","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9a6c1f2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n  }\n\nexport default { \n  getAll: getAll, \n  create: create, \n  remove: remove,\n  update: update\n}","import React from 'react'\nimport PersonService from './person_service'\n\nconst Persons = (props) => {\n    return (\n        <div>\n            {props.persons.map(person => \n            <Person key={person.id} person={person} \n            afterRemove={()=>props.setPersons(props.persons.filter(x => x.id !== person.id))} \n            setMessage={props.setMessage} setIsError={props.setIsError} />) }\n        </div>\n    )\n}\n\nconst Person = (props) => {\n    const removePerson = (person, updateState, setMessage, setIsError) => {\n        if (window.confirm(`Do you really want to remove ${person.name}?`)) { \n            PersonService.remove(person.id)\n            .then(data=>{\n                updateState()\n                setMessage(`Removed ${person.name} `)\n                setIsError(false)\n                setTimeout(() => {\n                    setMessage(null)\n                    setIsError(false)\n                }, 5000)\n            })\n            .catch(error=> {\n                setMessage(`Information of ${person.name} has already been removed from server`)\n                setIsError(true)\n                setTimeout(() => {\n                    setMessage(null)\n                    setIsError(false)\n                }, 5000)\n            })\n            \n        }\n    }\n    \n    return (\n        <p>\n            {props.person.name} {props.person.number}   \n            <button onClick={()=>removePerson(props.person, props.afterRemove, props.setMessage, props.setIsError)}>Delete</button>\n        </p>\n    )\n}\n\nexport default Persons","import React, { useState } from 'react'\nimport PersonService from './person_service'\n\nconst PersonForm = (props) => {\n    const { persons, setPersons, setMessage, setIsError } = props\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n\n    const submitPerson = (event) => {\n        event.preventDefault()\n        console.log('submit: '+ newName)\n        const filtered = persons.filter(person => person.name === newName)\n        if(filtered.length){\n          const person = filtered[0]\n          if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n            PersonService.update(person.id, {name: newName, number: newNumber})\n            .then(data => {\n              person.number = newNumber\n              setPersons(persons.filter(person => person.name !== newName).concat(person))\n              setMessage('Updated ' + newName)\n              setTimeout(() => {\n                setMessage(null)\n                setIsError(false)\n              }, 5000)\n            })\n            .catch(error => {\n              setMessage(error)\n              setIsError(true)\n              setTimeout(() => {\n                setMessage(null)\n                setIsError(false)\n              }, 5000)\n            })\n          }\n        }\n        else{\n          PersonService.create({name: newName, number:newNumber})\n          .then(data=>{\n            setPersons(persons.concat(data))\n            setMessage('Added ' + newName)\n            setIsError(false)\n            setTimeout(() => {\n              setMessage(null)\n              setIsError(false)\n            }, 5000)\n          })\n          .catch(error => {\n            setMessage(error)\n            setIsError(true)\n            setTimeout(() => {\n              setMessage(null)\n              setIsError(false)\n            }, 5000)\n          })\n        }\n        setNewName('')\n        setNewNumber('')\n      }\n    \n      const changeName = (event) => {\n        //console.log(event.target.value)\n        setNewName(event.target.value)\n      }\n      const changeNumber = (event) => {\n        //console.log(event.target.value)\n        setNewNumber(event.target.value)\n      }\n    return (\n        <form onSubmit={submitPerson}>\n            <div>\n                name: <input value={newName} onChange={changeName}/>\n                <br />\n                number: <input value={newNumber} onChange={changeNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default PersonForm","import React, { useState } from 'react'\n\nconst Filter = (props) => {  \n    const { filter, setFilter} = props\n    const changeFilter = (event) => {\n        //console.log(event.target.value)\n        setFilter(event.target.value)\n      }\n    \n\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={changeFilter}/>\n        </div>\n    )\n}\n\n\nexport default Filter","import React, { useState } from 'react'\nimport './index.css'\n\nconst Notification = ({ message, error }) => {\n    if (message === null || message==='') {\n      return null\n    }\n    \n    return (\n      <div className={error ? 'error' : 'success'}>\n        {message}\n      </div>\n    )\n  }\n\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './person'\nimport PersonForm from './person_form'\nimport Filter from './filter'\nimport PersonService from './person_service'\nimport Notification from './notifiaction'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage] = useState('')\n  const [ isError, setIsError] = useState(false)\n  \n\n  useEffect(() => {\n    console.log('effect')\n    PersonService.getAll()\n    .then(data => setPersons(data))\n    .catch(error=>{\n      setMessage('Unable to fetch data')\n      setIsError(true)\n      setTimeout(() => {\n        setMessage(null)\n        setIsError(false)\n      }, 5000)\n    })\n  }, [])\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={isError}/>\n      <Filter filter={filter} setFilter={setFilter} />\n      <h2>Add new person</h2>\n      <PersonForm persons={persons}  setPersons={setPersons} setMessage={setMessage} setIsError={setIsError}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons.filter(person => person.name.includes(filter))} \n      setPersons={setPersons} setMessage={setMessage} setIsError={setIsError}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}